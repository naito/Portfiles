--- ./ecell/pyecell/ecell/_ecs.orig.cpp	2013-10-22 19:06:51.000000000 +0900
+++ ./ecell/pyecell/ecell/_ecs.cpp	2013-10-22 19:40:08.000000000 +0900
@@ -1655,10 +1655,10 @@
     mutable String thePrivPrefix;
 };
 
-class PythonProcess: public PythonEntityBase< PythonProcess, Process >
+class PythonProcess__in_ecs_cpp__: public PythonEntityBase< PythonProcess__in_ecs_cpp__, Process >
 {
 public:
-    virtual ~PythonProcess() {}
+    virtual ~PythonProcess__in_ecs_cpp__() {}
 
     LIBECS_DM_INIT_PROP_INTERFACE()
     {
@@ -1709,8 +1709,8 @@
         return py::extract< bool >( anIsContinuousDescr.get() );
     }
 
-    PythonProcess( PythonDynamicModule< PythonProcess > const& aModule )
-        : PythonEntityBase< PythonProcess, Process >( aModule ) {}
+    PythonProcess__in_ecs_cpp__( PythonDynamicModule< PythonProcess__in_ecs_cpp__ > const& aModule )
+        : PythonEntityBase< PythonProcess__in_ecs_cpp__, Process >( aModule ) {}
 
     py::object theFireMethod;
 };
@@ -1818,7 +1818,7 @@
 };
 
 template<>
-EntityType DeduceEntityType< PythonProcess >::value( EntityType::PROCESS );
+EntityType DeduceEntityType< PythonProcess__in_ecs_cpp__ >::value( EntityType::PROCESS );
 
 template<>
 EntityType DeduceEntityType< PythonVariable >::value( EntityType::VARIABLE );
@@ -2290,6 +2290,11 @@
         return getLoggerBroker().getLogger( aFullPNString );
     }
 
+    void removeLogger( String const& aFullPNString )
+    {
+        getLoggerBroker().removeLogger( FullPN( aFullPNString ) );
+    }
+
     static char getDMSearchPathSeparator()
     {
         return Model::PATH_SEPARATOR;
@@ -2587,7 +2592,7 @@
         switch ( aDMType.getType() )
         {
         case EntityType::PROCESS:
-            aModule = new PythonDynamicModule< PythonProcess >( obj );
+            aModule = new PythonDynamicModule< PythonProcess__in_ecs_cpp__ >( obj );
             break;
 
         case EntityType::VARIABLE:
@@ -2925,7 +2930,7 @@
     py::register_exception_translator< std::exception >( &translateException );
     py::register_exception_translator< std::range_error >( &translateRangeError );
     PythonVariable::addToRegistry();
-    PythonProcess::addToRegistry();
+    PythonProcess__in_ecs_cpp__::addToRegistry();
     PythonSystem::addToRegistry();
 
     py::def( "getLibECSVersionInfo", &getLibECSVersionInfo );
@@ -3221,6 +3226,8 @@
               py::return_internal_reference<> () )
         .def( "getLogger", &AbstractSimulator::getLogger,
               py::return_internal_reference<>() )
+        .def( "removeLogger", &AbstractSimulator::removeLogger,
+              py::return_internal_reference<>() )                                // REMOVABLE?
         .def( "getLoggerData", 
               ( boost::shared_ptr< DataPointVector >( AbstractSimulator::* )(
                     String const& ) const )
